# Environment Configuration
# Set to 'production' for production deployment, 'staging' for staging, etc.
ENVIRONMENT=local

# SSL Configuration
# Set to 'true' to enable SSL, 'false' to disable
USE_SSL=false

# Traefik Configuration
# Email address for Let's Encrypt notifications
ACME_EMAIL=your-email@example.com
# Basic auth for Traefik & Dozzle dashboard. Generate using htpasswd
# FYI Note: when used in docker-compose.yml all dollar signs in the hash need to be escaped.
# To create a admin:password pair without prompt, the following command can be used:

# htpasswd -nbB admin password | sed 's/\$/\\$/g'
# -> admin:\$2y\$05\$Gh.L5rYEJjyq1jm3RC5MdOug4ql1XkcKVD46stn14pQNXsX/44xim
TRAEFIK_BASIC_AUTH="admin:\$2y\$05\$Gh.L5rYEJjyq1jm3RC5MdOug4ql1XkcKVD46stn14pQNXsX/44xim"
# htpasswd -nbB admin password | sed 's/\$/\\$/g'
# -> admin:\$2y\$05\$sae3pQYB7FaIqMNDsF5d0eVH/CuBHtbh8pCkIwq4VzB8.84XiAjHa
DOZZLE_BASIC_AUTH="admin:\$2y\$05\$sae3pQYB7FaIqMNDsF5d0eVH/CuBHtbh8pCkIwq4VzB8.84XiAjHa"
# htpasswd -nbB admin password | sed 's/\$/\\$/g'
# -> admin:\$2y\$05\$8I1D2yYsQvrAaSr5ZTJZnO/HGfT5jU7RT4GgCaN/prWQl55Osvxhq
PGWEB_BASIC_AUTH="admin:\$2y\$05\$8I1D2yYsQvrAaSr5ZTJZnO/HGfT5jU7RT4GgCaN/prWQl55Osvxhq"

# Domains
DOMAIN=localdev.online
TRAEFIK_DOMAIN="traefik.${DOMAIN}"
DOZZLE_DOMAIN="dozzle.${DOMAIN}"
PGWEB_DOMAIN="pgweb.${DOMAIN}"
API_DOMAIN="backend.${DOMAIN}"
WEB_DOMAIN="web.${DOMAIN}"
LOGTO_DOMAIN="logto.${DOMAIN}"
LOGTO_ADMIN_DOMAIN="logto-admin.${DOMAIN}"

# Database Configuration
# PostgreSQL user, password, and database name
# bootstrap superuser password db
POSTGRES_DB=postgres
POSTGRES_USER=postgres-admin
POSTGRES_PASSWORD=<generate-base64url-password>
# bootstrap logto user password db
POSTGRES_LOGTO_DB=logto
POSTGRES_LOGTO_USER=logto-admin
POSTGRES_LOGTO_PASSWORD=<generate-base64url-password>
# bootstrap api user password db
POSTGRES_API_DB=encore
POSTGRES_API_USER=encore-admin
POSTGRES_API_PASSWORD=<generate-base64url-password>
# multi-db (per-db user & passwords)
POSTGRES_MULTIPLE_DATABASES="${POSTGRES_LOGTO_USER}:${POSTGRES_LOGTO_PASSWORD}:${POSTGRES_LOGTO_DB},${POSTGRES_API_USER}:${POSTGRES_API_PASSWORD}:${POSTGRES_API_DB}"
# privilages for multi-db using "db1,db2,db3" format
SUPERUSER_PRIVILEGE_DB_NAMES="${POSTGRES_LOGTO_DB}"
REPLICATION_PRIVILEGE_DB_NAMES="${POSTGRES_API_DB}"
# operator account for pgweb
DB_ADMIN_USER=db-admin
DB_ADMIN_PASSWORD=<generate-base64url-password>
DB_ADMIN_ACCESS="${POSTGRES_LOGTO_DB},${POSTGRES_API_DB}"

# Logto Configuration
LOGTO_APP_ID=<generate-id>
LOGTO_APP_SECRET=<generate-secret>

# Logto Management API Configuration
LOGTO_MANAGEMENT_API_APPLICATION_ID=<generate-id>
LOGTO_MANAGEMENT_API_APPLICATION_SECRET=<generate-secret>

# Logto event webhook for stripe signing key
LOGTO_APP_API_EVENT_WEBHOOK_SIGNING_KEY=<generate-secret>

LOGTO_GOOGLE_CONNECTOR_ID=<generate-id>
LOGTO_GOOGLE_CLIENT_ID=
LOGTO_GOOGLE_CLIENT_SECRET=
