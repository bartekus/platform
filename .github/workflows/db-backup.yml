name: Database Backup

on:
  schedule:
    - cron: '0 2 * * *'  # Run every night at 2 AM UTC
  workflow_dispatch:  # Allow manual triggering

env:
  STORE_NUMBER_OF_DAYS_BACKUP: 7  # Default value, can be overridden in repository secrets
  POSTGRES_CONTAINER: postgres_db  # New environment variable for the container name

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Run backup script
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ vars.HOST }}
        username: ${{ vars.USER }}
        key: ${{ secrets.SSH_KEY }}
        # optionally add: known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
        script: |
          set -Eeuo pipefail
          export PGPASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
          TIMESTAMP="$(date -u +'%Y%m%dT%H%M%SZ')"
          BACKUP_DIR="$HOME/pg_snapshots"
          DB_NAME="${{ secrets.POSTGRES_DB }}"
          CONTAINER="${{ env.POSTGRES_CONTAINER }}"
          mkdir -p "$BACKUP_DIR"

          GLOBALS_SQL="${BACKUP_DIR}/globals_${TIMESTAMP}.sql"
          DB_DUMP="${BACKUP_DIR}/${DB_NAME}_${TIMESTAMP}.dump"
          MANIFEST="${BACKUP_DIR}/MANIFEST_${TIMESTAMP}.txt"

          # Dump globals (roles, grants)
          docker exec "$CONTAINER" pg_dumpall --globals-only -U "${{ secrets.POSTGRES_USER }}" > "$GLOBALS_SQL"

          # Dump the specific DB in custom (compressed) format
          docker exec "$CONTAINER" pg_dump -U "${{ secrets.POSTGRES_USER }}" -d "$DB_NAME" -Fc -f "/tmp/${DB_NAME}_${TIMESTAMP}.dump"
          docker cp "${CONTAINER}:/tmp/${DB_NAME}_${TIMESTAMP}.dump" "$DB_DUMP"
          docker exec "$CONTAINER" rm -f "/tmp/${DB_NAME}_${TIMESTAMP}.dump"

          # Optional gzip (custom format is already compressed; keep as-is or checksum it)
          sha256sum "$GLOBALS_SQL" "$DB_DUMP" > "$MANIFEST"

          # Retention
          STORE_NUMBER_OF_DAYS_BACKUP=${STORE_NUMBER_OF_DAYS_BACKUP:-7}
          find "$BACKUP_DIR" -mindepth 1 -type f -mtime "+$STORE_NUMBER_OF_DAYS_BACKUP" -name "*.sql" -delete
          find "$BACKUP_DIR" -mindepth 1 -type f -mtime "+$STORE_NUMBER_OF_DAYS_BACKUP" -name "*.dump" -delete
          find "$BACKUP_DIR" -mindepth 1 -type f -mtime "+$STORE_NUMBER_OF_DAYS_BACKUP" -name "MANIFEST_*.txt" -delete

          echo "Backup completed at ${TIMESTAMP}Z"