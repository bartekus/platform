name: VM Initialization

on:
  workflow_dispatch:
    inputs:
      droplet_ip:
        description: "Droplet IPv4"
        required: false
      droplet_ipv6:
        description: "Droplet IPv6"
        required: false
      host:
        description: "SSH host (fallback)"
        required: false
      user:
        description: "SSH username"
        required: false

env:
  ROOT_DIRECTORY: /opt

jobs:
  initialize_vm:
    runs-on: ubuntu-latest
    env:
      TARGET_HOST: ${{ github.event.inputs.droplet_ip || github.event.inputs.host || vars.HOST }}
      TARGET_USER: ${{ github.event.inputs.user || vars.USER }}
      TARGET_IPV6: ${{ github.event.inputs.droplet_ipv6 }}

    steps:
      - name: Echo inputs (sanity)
        run: |
          echo "IP4=${{ env.TARGET_HOST }}"
          echo "IP6=${{ env.TARGET_IPV6 }}"
          echo "HOST=${{ env.TARGET_HOST }}"
          echo "USER=${{ env.TARGET_USER }}"
          test -n "${{ env.TARGET_HOST }}" || { echo "❌ TARGET_HOST is empty"; exit 1; }
          test -n "${{ env.TARGET_USER }}" || { echo "❌ TARGET_USER is empty"; exit 1; }

      - name: Checkout code
        uses: actions/checkout@v4

      # Everything from here happens ON THE VM over SSH
      # 0) Ensure curl exists (quick and idempotent)
      - name: Ensure curl is installed
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -Eeuo pipefail
            if ! command -v curl >/dev/null 2>&1; then
              export DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a
              sudo apt-get update -y
              sudo apt-get install -y curl
            fi
            curl --version | head -n1

      # 1) Docker engine + Compose v2 (if missing) + docker-rollout (pinned) — all idempotent
      - name: Install Docker and the plugins
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -Eeuo pipefail
            # Docker (idempotent)
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            docker --version
            
            # Ensure Docker service is enabled on boot
            if command -v systemctl >/dev/null 2>&1; then
              sudo systemctl enable docker || true
              sudo systemctl restart docker || sudo systemctl start docker || true
            fi
            
            # Compose v2 plugin (only if missing) — idempotent overwrite to standard location
            if ! docker compose version >/dev/null 2>&1; then
              VER="v2.29.7"
              sudo mkdir -p /usr/local/lib/docker/cli-plugins
              sudo curl -fsSL \
                "https://github.com/docker/compose/releases/download/${VER}/docker-compose-$(uname -s)-$(uname -m)" \
                -o /usr/local/lib/docker/cli-plugins/docker-compose
              sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
            fi
            docker compose version
            
            # docker-rollout plugin (pin; idempotent overwrite)
            mkdir -p ~/.docker/cli-plugins
            curl -fsSL https://raw.githubusercontent.com/wowu/docker-rollout/v0.13/docker-rollout \
              -o ~/.docker/cli-plugins/docker-rollout
            chmod +x ~/.docker/cli-plugins/docker-rollout
            docker rollout --help >/dev/null 2>&1 && echo "docker-rollout ready"

      # 2) Group membership (skip for root) + restart for good measure
      - name: Give user ability to run docker and restart Docker
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -Eeuo pipefail
            if [ "$(id -un)" != "root" ]; then
              # docker group should already exist from the Docker install; just in case:
              getent group docker >/dev/null 2>&1 || sudo groupadd docker || true
              sudo usermod -aG docker "$USER"
            else
              echo "Running as root; skipping docker group membership."
            fi
            
            if command -v systemctl >/dev/null 2>&1; then
              sudo systemctl restart docker || sudo systemctl start docker || true
            elif command -v service >/dev/null 2>&1; then
              sudo service docker restart || sudo service docker start || true
            elif [ -f /etc/init.d/docker ]; then
              sudo /etc/init.d/docker restart || sudo /etc/init.d/docker start || true
            else
              echo "Unable to restart Docker. Please restart it manually."
              exit 1
            fi

      # 3) Validate
      - name: Validate Docker and Docker Compose Installation
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -Eeuo pipefail
            
            command -v docker >/dev/null 2>&1 || { echo "Docker is not installed or not in PATH"; exit 1; }
            docker_version=$(docker --version)
            echo "Docker version: $docker_version"
            
            command -v docker >/dev/null 2>&1 && docker info >/dev/null 2>&1 || true
            
            if ! docker compose version >/dev/null 2>&1; then
              echo "Docker Compose v2 is not installed or not in PATH"
              exit 1
            fi
            compose_version=$(docker compose --version)
            echo "Docker Compose version: $compose_version"
            
            docker rollout --help >/dev/null 2>&1 && echo "docker-rollout OK" || echo "docker-rollout missing (optional)"
            
            echo "Docker host is ready 🎉"