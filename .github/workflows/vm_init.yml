name: VM Initialization

on:
  workflow_dispatch:
    inputs:
      droplet_ip:
        description: "Droplet IPv4"
        required: true
      droplet_ipv6:
        description: "Droplet IPv6"
        required: false
      host:
        description: "SSH host (fallback if droplet_ip unset)"
        required: false
      user:
        description: "SSH username"
        required: false

env:
  ROOT_DIRECTORY: /opt

jobs:
  initialize_vm:
    runs-on: ubuntu-latest
    steps:
      - name: Echo inputs (sanity)
        run: |
          echo "IP4=${{ github.event.inputs.droplet_ip }}"
          echo "IP6=${{ github.event.inputs.droplet_ipv6 }}"
          echo "HOST=${{ github.event.inputs.host }}"
          echo "USER=${{ github.event.inputs.user }}"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker and docker-rollout
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.HOST }}
          username: ${{ vars.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -Eeuo pipefail

            # Install Docker (official script)
            for i in {1..3}; do
            curl -fsSL https://get.docker.com -o get-docker.sh && break || sleep 2
            done
            sh get-docker.sh
            docker version
            
            # Install docker-rollout (pin to release; fallback to main)
            mkdir -p ~/.docker/cli-plugins
            RVER="v0.13"

            if curl -fsSL "https://raw.githubusercontent.com/wowu/docker-rollout/${RVER}/docker-rollout" -o ~/.docker/cli-plugins/docker-rollout; then
              echo "docker-rollout: pinned ${RVER}"
            else
              echo "docker-rollout: falling back to main"
              curl -fsSL "https://raw.githubusercontent.com/wowu/docker-rollout/main/docker-rollout" -o ~/.docker/cli-plugins/docker-rollout
            fi

            chmod +x ~/.docker/cli-plugins/docker-rollout
            ~/.docker/cli-plugins/docker-rollout --help >/dev/null

      - name: Give user ability to run docker and restart Docker
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.HOST }}
          username: ${{ vars.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo usermod -aG docker $USER
            if command -v systemctl >/dev/null 2>&1; then
              sudo systemctl restart docker
            elif command -v service >/dev/null 2>&1; then
              sudo service docker restart
            elif [ -f /etc/init.d/docker ]; then
              sudo /etc/init.d/docker restart
            else
              echo "Unable to restart Docker. Please restart it manually."
              exit 1
            fi

      - name: Validate Docker and Docker Compose Installation
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.HOST }}
          username: ${{ vars.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Validate Docker installation
            if ! command -v docker &> /dev/null; then
              echo "Docker is not installed or not in PATH"
              exit 1
            fi
            docker_version=$(docker --version)
            echo "Docker version: $docker_version"

            # Validate Docker Compose installation
            if ! command -v docker compose &> /dev/null; then
              echo "Docker Compose is not installed or not in PATH"
              exit 1
            fi
            compose_version=$(docker compose --version)
            echo "Docker Compose version: $compose_version"

            echo "Docker and docker compose have been installed. Server is ready to use ðŸŽ‰ðŸ¥³"